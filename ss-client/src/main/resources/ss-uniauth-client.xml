<?xml version="1.0" encoding="UTF-8"?>
<b:beans 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
			http://www.springframework.org/schema/security
			http://www.springframework.org/schema/security/spring-security-4.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<b:import resource="classpath:ss-uniauth-common.xml"/>

	<b:bean id="customWebInvocationPrivilegeEvaluator" class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator">
		<b:constructor-arg name="securityInterceptor" ref="ssFilterSecurityInterceptor" />
	</b:bean>

    <global-method-security pre-post-annotations="enabled" secured-annotations="enabled" jsr250-annotations="enabled" proxy-target-class="true">
    </global-method-security>
    
    <!--
	<http pattern="/index.jsp" security="none"/> 
	 -->
    <http entry-point-ref="casAuthEntryPoint" use-expressions="true">
    	<!-- 
      	<form-login default-target-url="/index.jsp"/>
      	<intercept-url pattern="/admin/admin.jsp" access="hasRole('ROLE_USER')"/>
      	<logout logout-success-url="/index.jsp"/>
      	<access-denied-handler error-page="/403.jsp"/>
      	 -->
      	<intercept-url pattern="/**" access="authenticated" />
      	<custom-filter ref="ssFilterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
      	<custom-filter ref="casAuthenticationFilter" position="CAS_FILTER"/>
      	<custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
      	<custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />
      	<csrf disabled="true"/>
    </http>
	
	<b:bean id="casAuthEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">    
	  <b:property name="loginUrl" value="#{uniauthConfig['cas_server']}/login"/>    
	  <b:property name="serviceProperties" ref="casService"/>    
	</b:bean>  
	
	<b:bean id="casService" class="org.springframework.security.cas.ServiceProperties">    
		<b:property name="service" value="#{uniauthConfig[domainDefine.domainCode]}/j_spring_cas_security_check"/>   
		<b:property name="authenticateAllArtifacts" value="true"/>
		<b:property name="sendRenew" value="false" />
	</b:bean>  
	
	<b:bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">    
		<b:property name="authenticationManager" ref="authenticationManager"/>
		<b:property name="filterProcessesUrl" value="/j_spring_cas_security_check"></b:property>
	</b:bean>
	
	<b:bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">    
		<b:property name="ticketValidator" ref="casTicketValidator"/>    
		<b:property name="serviceProperties" ref="casService"/>    
		<b:property name="key" value="dianrong-ss-uniauth-cas"/>    
		<b:property name="authenticationUserDetailsService" ref="authenticationUserDetailsService"/>    
	</b:bean>
	
	<b:bean id="casTicketValidator" class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">    
		<b:constructor-arg value="#{uniauthConfig['cas_server']}/"/>    
	</b:bean>
	
	<b:bean id="authenticationUserDetailsService" class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">    
		<b:property name="userDetailsService" ref="ssUserDetailService"/>    
	</b:bean>  
	
	<b:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />
	
	<b:bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<b:property name="filterProcessesUrl" value="/j_spring_cas_security_logout"></b:property>
		<b:constructor-arg value="#{uniauthConfig['cas_server']}/logout" />
		<b:constructor-arg>
			<b:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</b:constructor-arg>
	</b:bean>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="casAuthenticationProvider"/>
	</authentication-manager>
		
	<b:bean id="ssFilterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<b:property name="authenticationManager" ref="authenticationManager" />
		<b:property name="accessDecisionManager" ref="accessDecisionManager" />
		<b:property name="securityMetadataSource" >
             <filter-security-metadata-source> 
                   <intercept-url pattern="/**" access="isAuthenticated()" /> 
             </filter-security-metadata-source>
        </b:property>
	</b:bean>
	
	<b:bean id="ssUserDetailService" class="com.dianrong.common.uniauth.client.SSUserDetailService">
	</b:bean>
    
	<b:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
		<b:property name="rolePrefix" value=""></b:property>
	</b:bean>
	<b:bean	id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter" />
    <b:bean id="expressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
	<b:bean id="expressionVoter" class="org.springframework.security.web.access.expression.WebExpressionVoter">		
		<b:property name="expressionHandler" ref="expressionHandler"/>	
	</b:bean>
	
	<b:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<b:constructor-arg name="decisionVoters">
			<b:list>
				<b:ref bean="roleVoter"/>
				<b:ref bean="authenticatedVoter"/>
				<b:ref bean="expressionVoter"/>
			</b:list>
		</b:constructor-arg>
	</b:bean>
	
    <b:bean id="ssBeanPostProcessor" class="com.dianrong.common.uniauth.client.support.SSBeanPostProcessor">
	</b:bean>
</b:beans>
