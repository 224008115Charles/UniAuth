// sl-bootstrap.js
console.log("RequireJS loading...");

console.log(SLConfig);

window.SLDefaultDeps = []; //except sl

String.prototype.replaceAll = function(s1, s2) {
  return this.replace(new RegExp(s1, "gm"), s2);
};

function _addMoreCommonScripts(s) {
  if (s && s.length > 0)
    window.SLDefaultDeps = window.SLDefaultDeps.concat(s);
  // Append additional dependencies
  if (typeof SLConfig.additionalScripts != 'undefined') {
    window.SLDefaultDeps = window.SLDefaultDeps.concat(SLConfig.additionalScripts);
  }
}


function _bootstrapSLApp(angular) {
  'use strict';
  require(window.SLDefaultDeps, function() {
    console.log("require others");
    angular.bootstrap(document, ['sl']);
    console.log("SL app initialized :)");
  });
}
function _addScriptsAndBootstrap(scripts, angular) {
  _addMoreCommonScripts(scripts);
  _bootstrapSLApp(angular);
}
//get the js to bootstrap the app
if (SLConfig.devMode || !SLConfig.bootstrapInsideMin) {
  require(["slBootstrap"], function() {});
}

// main.js
// Configure RequireJS
var _requireConfig = {

  // Base url for script files
  baseUrl: SLConfig.staticDomain + SLConfig.scriptsBaseUrl,

  // Alias libraries paths
  // http://stackoverflow.com/questions/19307198/angular-js-with-require-js-getting-uncaught-error-injectormodulerr
  // https://github.com/angular-ui/bootstrap/issues/1512
  paths: {
    'angular': '../tp/angular/angular',
    'angular.ui.router': '../tp/angular-ui-router/release/angular-ui-router',
    'angular.animate': '../tp/angular-animate/angular-animate',
    'angular.touch': '../tp/latest-tp/libs/angular-touch/angular-touch.min',
    'angular.wizard': '../tp/angular-wizard/angular-wizard',
    'angular.ui.bootstrap': '../tp/angular-bootstrap/ui-bootstrap-tpls.min',
    'angular.ui.utils': '../tp/angular-ui/ui-utils/ui-utils.min',
    'angular.file.upload': '../tp/ng-file-upload/angular-file-upload.min',
    'jquery': '../tp/jquery/jquery',
    'jquery.bootstrap': '../tp/bootstrap/dist/js/bootstrap',
    'jquery.cookie': '../tp/jquery.cookie/jquery.cookie',
    'jqueryUI': '../tp/jquery-ui/ui/jquery-ui-without-tooltip.custom.min',
    'jquery.file.upload': '../tp/jquery.file.upload-9.5.7/js/min/fileupload.all.min',
    'jquery.file.upload.base': '../tp/jquery.file.upload-9.5.7/js/min/jquery.fileupload.min',
    'jquery.iframe.file.upload': '../tp/jquery.file.upload-9.5.7/js/min/jquery.iframe-transport.min',
    'jquery.file.upload.angular-plugin': '../tp/jquery.file.upload-9.5.7/js/jquery.fileupload-angular',
    'load.image': '../tp/jquery.file.upload-9.5.7/js/imagelibs/load-image/js/load-image.min',
    'canvas.to.blob': '../tp/jquery.file.upload-9.5.7/js/imagelibs/canvas-to-blob/js/canvas-to-blob.min',
    'underscore': '../tp/underscore/underscore-min',
    'underscore.string': '../tp/underscore.string/underscore.string.min',
    'tinyCircleSlider': '../tp/jquery.tinycircleslider-1.5/jquery.tinycircleslider.min',
    'html5shiv': '../tp/html5shiv-1.0/html5shiv',
    'bootstrap3-typeahead': '../tp/bootstrap3-typeahead/bootstrap3-typeahead.min',
    'bootstrap-hover-dropdown': '../tp/bootstrap-hover-dropdown/bootstrap-hover-dropdown.min',
    'bootstrap-switch': '../tp/bootstrap-switch-3.0/build/js/bootstrap-switch.min',
    'highcharts': '../tp/highcharts/highcharts',
    'fullcalendar': '../tp/fullcalendar/fullcalendar.min',
    'flipclock': '../tp/flipclock/flipclock.min',
    'bootstrap-slider': '../tp/slider/js/bootstrap-slider',
    'flatui-checkbox': '../tp/flat-ui/flatui-checkbox',
    'flatui-radio': '../tp/flat-ui/flatui-radio',
    'banklist': './util/bank_list',
    'bankcitylist': './util/bank-city-list',
    'image.preview': '../tp/jquery.file.upload-9.5.7/js/min/load-image.min',
    'image.preview.canvas': '../tp/jquery.file.upload-9.5.7/js/min/canvas-to-blob.min',
    'youkuVideo': '../tp/youkuApi/youkuVideo',
    'jquery.svg': '../tp/jquery.svg/jquery.svg',
    'jquery.svganim': '../tp/jquery.svg/jquery.svganim',
    'videojs': '../tp/video-js-4.3.0/video-js/video',
    'jquery.slidejs': '../tp/jquery.slidesjs-3/source/jquery.slides.min',
    'jquery.placeholder': '../tp/jquery.placeholder/jquery.placeholder',
    'modernizr': '../tp/modernizr/modernizr',
    'tinycolor': '../tp/tinycolor/tinycolor',
    'bootstrap.colorpicker': '../tp/bootstrap-colorpickersliders/dist/bootstrap.colorpickersliders',
    'velocity': '../tp/velocity/velocity.min',
    'velocity.ui': '../tp/velocity/velocity.ui.min',
    'countUp': '../tp/countUp/countUp.min',
    'bootstrap.modal': '../tp/bootstrap/js/modal',
    'util/api-url': '../../resource/api-config',
    'sl-bootstrap-datetimepicker': '../tp/bootstrap-datetimepicker/js/sl-bootstrap-datetimepicker',
    'sl-bootstrap-datetimepicker-zh-CN': '../tp/bootstrap-datetimepicker/js/locales/sl-bootstrap-datetimepicker.zh-CN',
    'slBootstrap': (SLConfig.slAppScript ? SLConfig.slAppScript : "./sl-app"), //sl app bootstrap script
    'wechatSDK': '//res.wx.qq.com/open/js/jweixin-1.0.0',
    'blueimp-gallery': '../tp/blueimp/js/blueimp-gallery',
    'kindEditorBase': '../tp/kindeditor-4.1.10/kindeditor',
    'kindEditor': '../tp/kindeditor-4.1.10/lang/zh_CN',
    'jquery-base64': '../tp/jquery-base64/jquery.base64'
  },

  // Angular does not support AMD out of the box, put it in a shim
  shim: {
    'angular': {
      deps: ['jquery'],
      exports: 'angular'
    },
    'angular.ui.router': ['angular'],
    'angular.animate': ['angular'],
    'angular.touch': ['angular'],
    'angular.ui.bootstrap': ['angular'],
    'angular.ui.utils': ['angular'],
    'angular.wizard': ['angular'],
    'angular.file.upload': ['angular'],
    'jqueryUI': ['jquery'],
    'jquery.bootstrap': ['jquery'],
    'jquery.cookie': ['jquery'],
    'jquery.file.upload.base': ['jqueryUI', 'jquery.iframe.file.upload'],
    'jquery.iframe.file.upload': ['jquery'],
    'jquery.file.upload': ['jqueryUI'],
    'jquery.file.upload.angular-plugin': ['angular', 'jquery.file.upload'],
    'fullcalendar': ['jquery'],
    'underscore': {
      exports: 'underscore'
    },
    'underscore.string': ['underscore'],
    'highcharts': {
      deps: ['jquery'],
      exports: 'highcharts'
    },
    'bootstrap-slider': ['jquery'],
    'flatui-checkbox': ['jquery'],
    'flatui-radio': ['jquery'],
    'bootstrap-switch': ['jquery.bootstrap'],
    'bootstrap3-typeahead': ['jquery.bootstrap'],
    'bootstrap-hover-dropdown': ['jquery.bootstrap'],
    'jquery.svg': ['jquery'],
    'jquery.svganim': ['jquery.svg'],
    'jquery.slidejs': ['jquery'],
    'jquery.placeholder': ['jquery'],
    'bootstrap.colorpicker': ['jquery.bootstrap', 'tinycolor'],
    'velocity': ['jquery'],
    'velocity.ui': ['velocity'],
    'bootstrap.modal': ['jquery'],
    'sl-bootstrap-datetimepicker-zh-CN': ['jquery', 'jquery.bootstrap', 'sl-bootstrap-datetimepicker'],
    'kindEditor': ['kindEditorBase'],
    'jquery-base64': ['jquery']
  },

  // Priority
  priority: ['angular'],

  // In dev mode, prevent browser from caching scripts
  urlArgs: 'ver=' + SLConfig.buildNumber,

  // Remove timeout
  waitSeconds: 0
};
//default path will override by the custom config
for (var key in SLConfig.customRequire) {
  _requireConfig.paths[key] = SLConfig.customRequire[key];
}

require.config(_requireConfig);

// sl-app.js MODIFIED -- login-form.js excluded
/**
 * Main application module "sl".
 * Contains initialization and configuration of service providers.
 */
require([
  'angular',
  'angular.ui.router',
  'angular.animate',
  'angular.ui.utils',
  'angular.ui.bootstrap',
  'angular.wizard',
  'underscore',
  'underscore.string',
  'common/index',
  'models/index',
  'modules/sl-themes'
], function(angular) {
  'use strict';
  // Insert underscore as a module of angularjs to avoid global scope pollution
  // http://stackoverflow.com/questions/14968297/use-underscore-inside-controllers
  var underscore = angular.module('underscore', []);
  // Wrap up underscore as a factory
  underscore.factory('_', function() {
    // Integrate underscore.string into underscore namespace
    // _.str becomes a global variable if no module loading is detected
    // Mix in non-conflict functions to Underscore namespace
    _.mixin(_.str.exports());

    return window._;
  });

  // Create app package
  var sl = angular.module('sl', [
    'ui.router',
    'ngAnimate',
    'ui.utils',
    'ui.bootstrap',
    'sl.common',
    'sl.models',
    'sl.constants',
    'sl.themes',
    'sl-angular-wizard',
    'underscore'
  ]);

  // Config Angular Bootstrap UI Tooltip
  // http://stackoverflow.com/questions/16651227/enable-angular-ui-tooltip-on-custom-events/16653079#16653079
  sl.config([
    '$provide',
    '$tooltipProvider',
    function(
      $provide,
      $tooltipProvider
    ) {
      $tooltipProvider.setTriggers({
        'mouseenter': 'mouseleave',
        'click': 'click',
        'focus': 'blur',
        'never': 'mouseleave' // <- This ensures the tooltip will go away on mouseleave
      });
    }
  ]);

  // sl-url directive. Builds the href by prepending the current domain to the given url
  sl.directive('slUrl', function() {

    return {
      restrict: 'A',
      link: function($scope, element, attrs) {
        element.attr('href', (SLConfig.domain ? '/' + SLConfig.domain : '') + attrs.slUrl);
      }
    };
  });

  /**
   * @Deprecated, won't link to www2 anymore
   * sl-old-href directive. Adds href to link to old website
   */
  sl.directive('slOldHref', function() {

    return {
      restrict: 'A',
      scope: {
        url: '@'
      },
      link: function($scope, element, attrs) {
        element.attr('href', attrs.url);
      }
    };
  });
  //define sl
  define("sl", [], function() {
    return sl;
  });
  _addScriptsAndBootstrap([
    // Services required on every page
    'services/common/translate-service',
    // Controllers required on every page
    'controllers/common/main',
    //'controllers/account/login-form',
    'controllers/account/header',
    'account/login',
    'util/api-url'
  ], angular);

  console.log("require sl");
});


// common/index.js
define('common/index', [
  'angular',
  'common/services/env',
  'common/services/utils'
], function(
  angular,
  Environment,
  Utils
) {
  var commonModule = angular.module('sl.common', [])
                            .constant('Environment', Environment)
                            .service('Utils', Utils);

  return commonModule;
});

// services/env.js
/**
 *
 * This is copied from web, I forget where
 *
 * What a shame!!!
 *
 */
define('common/services/env', [
], function() {
  'use strict';

  var detectBrowser = function() {
    var nVer = navigator.appVersion;
    var nAgt = navigator.userAgent;
    var browserName = navigator.appName;
    var fullVersion = '' + parseFloat(navigator.appVersion);
    var majorVersion = parseInt(navigator.appVersion, 10);
    var nameOffset, verOffset, ix;

    // In Opera, the true version is after "Opera" or after "Version"
    if ((verOffset = nAgt.indexOf("Opera")) != -1) {
      browserName = "Opera";
      fullVersion = nAgt.substring(verOffset + 6);
      if ((verOffset = nAgt.indexOf("Version")) != -1)
        fullVersion = nAgt.substring(verOffset + 8);
    } else if ((verOffset = nAgt.indexOf("MSIE")) != -1) {
      // In MSIE, the true version is after "MSIE" in userAgent
      browserName = "Microsoft Internet Explorer";
      fullVersion = nAgt.substring(verOffset + 5);
    } else if ((verOffset = nAgt.indexOf("Chrome")) != -1) {
      // In Chrome, the true version is after "Chrome"
      browserName = "Chrome";
      fullVersion = nAgt.substring(verOffset + 7);
    } else if ((verOffset = nAgt.indexOf("Safari")) != -1) {
      // In Safari, the true version is after "Safari" or after "Version"
      browserName = "Safari";
      fullVersion = nAgt.substring(verOffset + 7);
      if ((verOffset = nAgt.indexOf("Version")) != -1)
        fullVersion = nAgt.substring(verOffset + 8);
    } else if ((verOffset = nAgt.indexOf("Firefox")) != -1) {
      // In Firefox, the true version is after "Firefox"
      browserName = "Firefox";
      fullVersion = nAgt.substring(verOffset + 8);
    } else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {
      // In most other browsers, "name/version" is at the end of userAgent
      browserName = nAgt.substring(nameOffset, verOffset);
      fullVersion = nAgt.substring(verOffset + 1);
      if (browserName.toLowerCase() == browserName.toUpperCase()) {
        browserName = navigator.appName;
      }
    }

    // trim the fullVersion string at semicolon/space if present
    if ((ix = fullVersion.indexOf(";")) != -1) {
      fullVersion = fullVersion.substring(0, ix);
    }
    if ((ix = fullVersion.indexOf(" ")) != -1) {
      fullVersion = fullVersion.substring(0, ix);
    }

    majorVersion = parseInt('' + fullVersion, 10);
    if (isNaN(majorVersion)) {
      fullVersion = '' + parseFloat(navigator.appVersion);
      majorVersion = parseInt(navigator.appVersion, 10);
    }

    return {
      browserName: browserName,
      fullVersion: fullVersion,
      majorVersion: majorVersion,
      appName: navigator.appName,
      userAgent: navigator.userAgent
    };
  };

  var detectOS = function() {
    // This script sets OSName variable as follows:
    // "Windows"    for all versions of Windows
    // "MacOS"      for all versions of Macintosh OS
    // "Linux"      for all versions of Linux
    // "UNIX"       for all other UNIX flavors
    // "Unknown OS" indicates failure to detect the OS

    var OSName = "Unknown OS";
    if (navigator.appVersion.indexOf("Win") != -1) {
      OSName = "Windows";
    }
    if (navigator.appVersion.indexOf("Mac") != -1) {
      OSName = "MacOS";
    }
    if (navigator.appVersion.indexOf("X11") != -1) {
      OSName = "UNIX";
    }
    if (navigator.appVersion.indexOf("Linux") != -1) {
      OSName = "Linux";
    }

    return OSName;
  };

  return {
    os: detectOS(),
    browser: detectBrowser()
  };
});

define('common/services/utils', [
  'angular'
], function(angular) {
  'use strict';

  function Utils(Environment, $filter) {
    this.$filter = $filter;
    var translate = this.$filter('translate');
    this.isNodeAPI = SLConfig.nodeAPI;
  }

  // Get link with current domain prepended
  Utils.prototype.fullUrl = function(path) {
    return location.protocol + "//" + location.host + path;
  };

  Utils.prototype.nowToRangeGivenTime = function(givenTime) {
    var now = new Date();
    var leftTime = givenTime - now.getTime();
    var leftsecond = parseInt(leftTime / 1000);
    var time = {
      day: 0,
      hour: 0,
      minute: 0,
      second: 0
    };
    time.day = (Math.floor(leftsecond / (60 * 60 * 24)) < 10 ? '0' : '') + Math.floor(leftsecond / (60 * 60 * 24));
    time.hour = (Math.floor((leftsecond - time.day * 24 * 60 * 60) / 3600) < 10 ? '0' : '') + Math.floor((leftsecond - time.day * 24 * 60 * 60) / 3600);
    time.minute = (Math.floor((leftsecond - time.day * 24 * 60 * 60 - time.hour * 3600) / 60) < 10 ? '0' : '') + Math.floor((leftsecond - time.day * 24 * 60 * 60 - time.hour * 3600) / 60);
    time.second = (Math.floor(leftsecond - time.day * 24 * 60 * 60 - time.hour * 3600 - time.minute * 60) < 10 ? '0' : '') + Math.floor(leftsecond - time.day * 24 * 60 * 60 - time.hour * 3600 - time.minute * 60);

    return time;
  };

  Utils.prototype.createDate = function(dateString) {
    //already an object
    if ("string" !== typeof dateString) {
      return dateString;
    }

    return new Date(Date.parse(dateString.replace('T', ' ').replace(/-/g, '/')));
  };

  Utils.prototype.checkIfOldIE = function(fromVersion) {
    var ieMatch = navigator.userAgent.match('MSIE ([0-9]+)');
    var ieVersion = ieMatch && ieMatch.length > 1 ? ieMatch[1] : 'unknown';

    if (ieVersion == 'unknown') // Not IE
      return false;
    if (fromVersion == null) {
      return (ieVersion * 1 <= 7);
    } else {
      return (ieVersion * 1 <= fromVersion * 1);
    }
  };

  Utils.prototype.getURLParams = function() {
    var params = {};
    var url = location.search;
    var lastQuestionMarkLoc = url.lastIndexOf('?');
    if (lastQuestionMarkLoc >= 0) {
      var paramsArr = url.slice(lastQuestionMarkLoc + 1).split('&');

      for (var i in paramsArr) {
        var item = paramsArr[i];
        var paramKeyVal = item.split('=');
        params[paramKeyVal[0]] = paramKeyVal[1];
      }
    }

    return params;
  };

  Utils.prototype.validatePassword = function(password) {
    var translate =  this.$filter('translate');
    if (!password) {
      return [translate('common.services.utils.please_need_password')];
    }

    if (password.length < 8) {
      return [translate('common.services.utils.password_long_eight')];
    }

    if (password.length > 40) {
      return [translate('common.services.utils.password_long_forty')];
    }
  };

  Utils.prototype.staticUrl = function(url) {
    var domain = SLConfig.staticDomain ? SLConfig.staticDomain : "";
    return domain + url;
  };

  // /static/images/directives/new-share.jpg --> /static/:locale/images/directives/new-share.jpg
  Utils.prototype.localeUrl = function(url) {
    var locale = $.cookie('lang');
    if(!url || !locale || locale == 'zh') return url;
    var urlParts = url.split('/');
    urlParts.splice(2, 0, locale);
    return urlParts.join('/');
  };

  Utils.prototype.checkBoolean = function(b) {
    if ('boolean' == typeof b) {
      return b;
    }

    return b === 'true';
  };

  Utils.prototype.isJsonFromDB = function() {
    var p = Utils.prototype.getURLParams();
    return SLConfig.jsonFromDB === true || Utils.prototype.checkBoolean(p.swift);
  };

  Utils.prototype.switchModal = function(srcModalId, dstModalId) {
    function switchHandler() {
      setTimeout(function() {
        $(dstModalId).modal('show');
        $(srcModalId).off('hidden.bs.modal', switchHandler);
      }, 0);
    }

    $(srcModalId).on('hidden.bs.modal', switchHandler);
    $(srcModalId).modal('hide');
  }

  Utils.prototype.showModal = function(modalId) {
    return $(modalId).modal('show');
  }

  Utils.prototype.hideModal = function(modalId) {
    return $(modalId).modal('hide');
  }

  Utils.prototype.getBrowserInfo = function() {
    var browser = {
      versions: function() {
        var u = navigator.userAgent;
        return {
          trident: u.indexOf('Trident') > -1,
          presto: u.indexOf('Presto') > -1,
          webKit: u.indexOf('AppleWebKit') > -1,
          gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1,
          mobile: !!u.match(/AppleWebKit.*Mobile.*/) || !!u.match(/AppleWebKit/),
          ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/),
          android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1,
          iPhone: u.indexOf('iPhone') > -1 || u.indexOf('Mac') > -1,
          iPad: u.indexOf('iPad') > -1,
          webApp: u.indexOf('Safari') == -1
        };
      }(),
      language: (navigator.browserLanguage || navigator.language).toLowerCase()
    }

    return browser;
  };

  Utils.$inject = ['Environment', '$filter'];

  return Utils;
});

// notify-service.js
/**
 * Notifications Service
 */
define('services/common/notify-service', [
  'sl'
], function(sl) {
  sl.factory('NotifyService', [
    '$timeout',
    '$filter',
    '$sce',
    function(
      $timeout,
      $filter,
      $sce
    ) {

      var NotifyService = {
        timeout: 10000,
        messages: {
          type: '',
          msg: []
        },
        types: {
          error: 'danger',
          info: 'info',
          success: 'success',
          warning: 'warning'
        }
      };

      // Add message
      NotifyService.message = function(text, type, timeout) {
        var ms = [];
        if (text && typeof (text.push) != 'undefined') {
          for (var i = 0; i < text.length; i++) {
            ms.push($sce.trustAsHtml($filter('translate')(text[i])));
          //					ms.push({
          //						'text': $filter('translate')(text[i]),
          //						'type': type
          //					});
          }
        } else {
          ms.push($sce.trustAsHtml($filter('translate')(text)));
        //				ms.push({
        //					'text':  $filter('translate')(text),
        //					'type': type
        //				});
        }
        NotifyService.messages.type = type;

        NotifyService.messages.msg = ms;

        $timeout(function() { //add msg bar "fold-open animation"


          if ($("#notifications .msg-fold-up")) {
            $("#notifications .msg-fold-up").addClass("msg-fold-open-up");

            if ($("#notifications .msg-content")) {

              var msgContentHeightCss = $("#notifications .msg-content").css('height');
              if (!msgContentHeightCss)
                return;
              var msgContentHeight = msgContentHeightCss.substr(0, msgContentHeightCss.indexOf('px'));

              $("#notifications .msg-fold-up").height(msgContentHeight / 2);
              $("#notifications .msg-fold-up").css('margin-bottom', -1 * msgContentHeight / 2 + 'px');
            }

            $("#notifications .msg-fold-up").removeClass("msg-fold-up");
          }

          if ($("#notifications .msg-fold-down")) {
            $("#notifications .msg-fold-down").addClass("msg-fold-open-down");

            if ($("#notifications .msg-content")) {

              var msgContentHeightCss = $("#notifications .msg-content").css('height');
              if (!msgContentHeightCss)
                return;
              var msgContentHeight = msgContentHeightCss.substr(0, msgContentHeightCss.indexOf('px'));

              $("#notifications .msg-fold-down").height(msgContentHeight / 2);
              $("#notifications .msg-fold-down").css('margin-top', (-1 * msgContentHeight / 2 - 1) + 'px');

            }

            $("#notifications .msg-fold-down").removeClass("msg-fold-down");
          }

        }, 10);

        /*for(var i = 0; i < ms.length; i++){
         NotifyService.messages.msg.unshift(ms[i]);
         }*/

        $timeout(function() {
          NotifyService.messages.msg.splice(-ms.length, ms.length);
        }, timeout || NotifyService.timeout);
      };

      // Dismiss message
      NotifyService.dismiss = function(index) {
        NotifyService.messages.msg = [];

        if ($("#notifications .msg-fold-open-up")) { //when click msg bar, should reset the class as msg fold close: msg-fold-up,msg-fold-down
          $("#notifications .msg-fold-open-up").addClass("msg-fold-up");
          $("#notifications .msg-fold-open-up").removeClass("msg-fold-open-up");
        }

        if ($("#notifications .msg-fold-open-down")) {
          $("#notifications .msg-fold-open-down").addClass("msg-fold-down");
          $("#notifications .msg-fold-open-down").removeClass("msg-fold-open-down");
        }
      };

      // Display error message
      NotifyService.error = function(text, timeout) {
        NotifyService.message(text, 'error', timeout);
      };

      // Display info message
      NotifyService.info = function(text, timeout) {
        NotifyService.message(text, 'info', timeout);
      };

      // Display success message
      NotifyService.success = function(text, timeout) {
        NotifyService.message(text, 'success', timeout);
      };

      // Return service instance
      return NotifyService;
    }
  ]);
});

// translate-service.js
/**
 * Translate Service. Provides methods and a directive to translate messages 
 * for user's current locale.
 */
define('services/common/translate-service', [
  'sl'
], function(sl) {

  sl.factory('TranslateService', [
    '$q',
    function(
      $q
    ) {

      var TranslateService = {};

      // Returns the translation for the given resource key
      TranslateService.translate = function(key) {

        if (resources && typeof resources[key] != 'undefined') {
          return resources[key];
        }

        return key;
      };


      // Return service instance
      return TranslateService;
    }
  ]);

  // translate filter
  sl.filter('translate', [
    'TranslateService',
    function(
      TranslateService
    ) {
      return function(key) {
        return TranslateService.translate(key);
      };
    }
  ]);
});


// define common controllers
// main.js MODIFIED removed sl-money-format, sl-string-format
/**
 *  Main controller
 */
define('controllers/common/main', [
  'sl',
  'jquery',
  'jquery.cookie',
  'jquery.bootstrap',
  'services/common/notify-service',
  //'filters/misc/sl-money-format',
  //'filters/misc/sl-string-format',
  'controllers/account/header',
  'directives/ui/sl-scroll-to'
], function(sl) {

  sl.controller('MainCtrl', [
    '$scope',
    '$filter',
    '$window',
    '$location',
    '$anchorScroll',
    '$rootScope',
    '$http',
    '$sce',
    'NotifyService',
    // 'QQ',
    // 'WeiBo',
    'Utils',
    'User',
    'Session',
    function(
      $scope,
      $filter,
      $window,
      $location,
      $anchorScroll,
      $rootScope,
      $http,
      $sce,
      NotifyService,
      // QQ,
      // WeiBo,
      Utils,
      User,
      Session
    ) {
      var translate = $filter('translate');
      $scope.session = Session;
      $scope.notify = NotifyService;

      // Check if a given path is active
      $scope.isActive = function(path) {
        var currentPath = location.pathname || "/";
        return path === currentPath;
      };

      // Logout and redirect to dedicated page
      $scope.logout = function() {
        User.logout()
          .then(function(res) {
            $.removeCookie('userName', {path: '/'});
            if (location.pathname == '/account/my-account') {
              window.location.replace("/");
            }
          }, function(res) {});
      };

      // Reload current url with the new locale
      $scope.switchLocale = function(locale) {
        var href = location.href.replace(/[?&]*locale=[a-zA-Z_]*/g, "");
        location = href + (href.indexOf("?") >= 0 ? '&' : '?') + 'locale=' + locale;
      };

      $scope.escapeHtml = function(s) {
        return $sce.trustAsHtml(s);
      };

      $scope.formatPercentageValue = function(per) {
        if (per < 1) {
          return Math.ceil(per * 1);
        }
        return Math.floor(per * 1);
      };
      // Check if it's on account registration or login page
      $scope.$watch(function() {
        return $location.host();
      }, function(value) {});

      var c = "vipTipDisplayed";
      var vipTooltip = $('#sl-header .vip-tooltip');
      $scope.tooltip = function() {
        vipTooltip.removeClass("hidden");
      };
      $scope.hideTooltip = function() {
        vipTooltip.addClass("hidden");
      //$.cookie(c, true);
      };
      $('#vip-header-logo').click(function(e) {
        e.preventDefault();
        window.open('http://forum.dianrong.com/forum.php?mod=vip');
      });

      /* MODIFIED don't query profile on login page
      Profile.query().then(function(response) {
        if (response.vipLevelChangeEvent) {
          if (response.vipLevelChangeEvent.fromLevel < response.vipLevelChangeEvent.toLevel) {
            vipTooltip.find(".tooltip-inner").removeClass("down").addClass("up")
              .html("<p>"+translate('controller.common.main.congratulation')+"</p><p>"+translate('controller.common.main.make_persistent_efforts_oh')+"</p>");
            $scope.tooltip();
          } else if (response.vipLevelChangeEvent.fromLevel > response.vipLevelChangeEvent.toLevel) {
            var b = $('<p>'+translate('controller.common.main.sorry')+'</p><p><a href="">'+translate('controller.common.main.to_understand_why_the_drop')+'</a></p>');
            vipTooltip.find(".tooltip-inner").removeClass("up").addClass("down").html(b);
            b.find('a').click(function(e) {
              e.preventDefault();
              window.open('/public/help-center');
            });
            $scope.tooltip();
          }
        }
      });
      */

      // $scope.QQ = QQ;
      // $scope.WeiBo = WeiBo;

      $scope.handleGenericLoginError = function(res) {
        //                    if($rootScope.loginErrorOpened){
        //
        //                    }
        if (res.result == 'login') {
          var loginRequired = '<div class="login-notify-wrapper">'+translate('controller.common.main.please_log_in_again')+
            '<a class="login-a" href="/account/login">'+translate('controller.common.main.register')+'</a> <a href="/account/create">'+translate('controller.common.main.join_dianrong')+'</a></div>';
          NotifyService.error(loginRequired);
          return true;
        }
        return false;
      };

      $("#notifications").affix({
        offset: {
          top: 0
        }
      });
    }
  ]);

  $(window).scroll(function() {
    var scrollOffset = $(document).scrollTop();
    if (scrollOffset != 0) {
      $(".scroll-to-top").show();
    } else {
      $(".scroll-to-top").hide();
    }
  });
  function onResize() {
    var cw = document.documentElement.clientWidth;
    var sw = window.screen.width;
    var scrollbarWidth = 17;
    if(cw == sw){
      cw = cw - scrollbarWidth;
    }
    var col = (cw - 1110) / 2;
    if (col <= 90) {
      $(".tool-bar").css('right', '25px');
    } else {
      $(".tool-bar").css('right', function () {
        var temp = col - 74;
        return temp;
      });
    }
  }
  onResize();
  $(window).bind('resize', onResize);

});

// account/header.js
// MODIFIED -- exclude profile
define('controllers/account/header', [
  'sl',
  'jquery.bootstrap',
  'directives/ui/sl-scroll-to'
], function(sl) {
  sl.controller('HeaderCtrl', [
    '$scope',
    function(
      $scope
    ) {
      $scope.vipLink = function(link) {
        window.open(link);
      };
    }
  ]);
});

// MODIFIED account/login.js
define('account/login', [
  'sl',
  'directives/ui/sl-captcha'
], function (sl) {
  sl.controller('NewLoginCtrl', [
    '$scope',
    '$q',
    'Utils',
    'User',
    '$filter',
    '$window',
    'Session',
    'Captcha',
    function (
      $scope,
      $q,
      Utils,
      User,
      $filter,
      $window,
      Session,
      Captcha) {

      var urlParams = Utils.getURLParams();
      var isFromForum = !!(urlParams.fromForum && 'true' == urlParams.fromForum);
      var translate = $filter('translate');
      var submitBtnText = {
        login: translate('controller.common.main.register'),
        logging: translate('login_form.logining')
      };
      var sourced = '';
      var SL_USERNAME_COOKIE = 'slUsername';

      $.removeCookie(SL_USERNAME_COOKIE, { path: '/account' }); // will be deleted later

      $scope.needCaptcha = false;
      $scope.captcha = Captcha;

      $scope.submitText = submitBtnText.login;
      $scope.errors = [];

      $scope.username = $.cookie(SL_USERNAME_COOKIE);
      $scope.password = '';
      $scope.captchaVerifyCode = '';

      $scope.rememberMe = $.cookie(SL_USERNAME_COOKIE) ? true : false;

      $scope.serviceUrl = isFromForum ? SL_NEXT_URL : SL_LENDER_SERVICE;

      function focusInput() {
        if (!$scope.username) {
          $('#usernameSingle').focus();
        } else {
          $('#passwordSingle').focus();
        }
      }

      focusInput();
      $('#loginPopModal').on('shown.bs.modal', function (e) {
        focusInput();
      });
      var loginTimeoutModal = $('#loginTimeoutPopModal');
      loginTimeoutModal.on('shown.bs.modal', function (e) {
        if (!$scope.username) {
          loginTimeoutModal.find('#usernameSingle').focus();
        } else {
          loginTimeoutModal.find('#passwordSingle').focus();
        }
      });
      $scope.$on('loginFail', function (event, data) {
        if (Session.isAuthenticated && data == true) {
          $('#loginTimeoutPopModal').modal('show');
        }
      });

      $scope.refreshCaptcha = function () {
        $scope.captchaVerifyCode = '';
        Captcha.refresh();
      };

      // modified
      function getRedirectUrl() {
        var redirectUrl = 'http://www.dianrong.com/account/my-account?fromLogin=true';
        try {
          if (SL_NEXT_URL) {
            redirectUrl = decodeURIComponent(SL_NEXT_URL);
          }
        } catch (e) {
          console.log(e);
        }
        return redirectUrl;
      }

      function lenderLoginSuccess(response) {
        $.cookie('userName', response.content.result, {path: "/"});
        $scope.submitText = submitBtnText.login;
        $scope.logging = false;
        $scope.needCaptcha = false;

	// for IE
	if (response.serviceTicket) {
	  var url = $scope.serviceUrl + "?ticket=" + response.serviceTicket + "&targetUrl=" + getRedirectUrl();
	  window.location.assign(url);
	}
	else if (sourced == 'popTimeout' || sourced == 'loginPop') {
          window.location.reload(true);
        } else {
          window.location.assign(getRedirectUrl());
        }
      }

      function lenderLoginFailure(response) {
        $scope.submitText = submitBtnText.login;
        $scope.logging = false;
        if (response.content.needCaptcha == true) {
          $scope.needCaptcha = true;
          $scope.refreshCaptcha();
        }
        $scope.errors = getResponseErrors(response);
        return $q.reject(response);
      }

      function getResponseErrors(response) {
        return response.errors && response.errors.length > 0 ? response.errors : [ translate('account.login_form.please_try_again_later')];
      }

      function lenderLogin() {
        return User.loginSmart($scope.username, $scope.password, $scope.serviceUrl, $scope.captchaVerifyCode)
          .then(lenderLoginSuccess, lenderLoginFailure);
      }

      $scope.submit = function (source) {
        $scope.errors = [];
        sourced = source;

        var passwordValidationErrors = Utils.validatePassword($scope.password);

        if (passwordValidationErrors && passwordValidationErrors.length > 0) {
          $scope.errors = passwordValidationErrors;
          return;
        }

        if ($scope.rememberMe) {
          $.cookie(SL_USERNAME_COOKIE, $scope.username, {path: "/"});
        } else {
          $.cookie(SL_USERNAME_COOKIE, "", {path: "/"});
        }
        $scope.submitText = submitBtnText.logging;
        $scope.logging = true;

        lenderLogin();
      };
    }
  ]);
});


// sl-captcha.js MODIFIED
define('directives/ui/sl-captcha', [
  'sl'
], function(sl) {
  function Captcha(User) {
    this.user = User;
    this.enabled = true;
    this.defaultImgSrc = '/auth-server/images/captcha.jpg';
    this.imgSrc = null;

    this.check();
  }

  Captcha.prototype.check = function() {
    var self = this;
    self.enabled = true;
    if (SL_SHOW_CAPTCHA) {
      self.imgSrc = self.defaultImgSrc;
    } else {
      // do not show hidden captcha when page loads
      SL_SHOW_CAPTCHA = true;
    }
    return true;
  }

  Captcha.prototype.refresh = function() {
    if(this.enabled) {
      var date = new Date();
      this.imgSrc = this.defaultImgSrc + '?v=' + date.getTime();
    }
  }
  Captcha.$inject = ['User'];

  sl.service('Captcha', Captcha);

  sl.directive('slCaptcha', [
    'Captcha',
    function(
      Captcha
    ) {
      return {
        restrict: 'EA',
        replace: true,
        template: '<img class="captcha-img" ng-src="{{captcha.imgSrc}}"/>',
        link: function(scope, elem, attrs) {
          scope.captcha = Captcha;
        }
      };
    }
  ]);
});


// Required modules, filters & directives

// sl-theme.js
/*
 *Theme Constants Module
 */
define('modules/sl-themes', [
  'angular'
], function() {
  'use strict';
  var colorConstants = {
    BRAND_COLOR: {
      PRIMARY: '#00bc8d'
    }
  };
  angular.module('sl.themes', []).constant({
    'ColorConstants': colorConstants
  });
})

// sl-scroll-to.js
// Generated by CoffeeScript 1.7.1
define('directives/ui/sl-scroll-to', [
  'sl'
], function(sl) {
  return sl.directive('slScrollTo', [
    'Utils',
    function(
      Utils
    ) {
      return {
        restrict: 'EA',
        scope: {
          anchor: '=',
          speed: '='
        },
        link: function(scope, elem, attrs) {
          var enable = attrs.enableOldIe || !Utils.checkIfOldIE(8);
          var offsetTop = attrs.scrollOffset ? parseInt(attrs.scrollOffset) : 0;

          if (enable) {
            if (!attrs.speed) {
              attrs.speed = 500;
            }

            elem.bind('click', function() {
              if (attrs.anchor) {
                return $('html, body').animate({
                  scrollTop: $('#' + attrs.anchor).offset().top + offsetTop
                }, attrs.speed);
              } else {
                return $('html, body').animate({
                  scrollTop: 0
                }, attrs.speed);
              }
            });
          }
        }
      }
    }
  ]);
});

// Model lib js
// modles/index.js MODIFIED excluded profile model
define('models/index', [
  'angular',
  'common/index',
  'models/lib/request',
  'models/lender/session',
  'models/lender/user'
], function(
  angular,
  slCommon,
  Request,
  Session,
  User
) {
  var dependencies = [
    'sl.common'
  ];

  var modelsModule = angular.module('sl.models', dependencies)
                            .service('Request', Request)
                            .service('Session', Session)
                            .service('User', User);
                            //.constant('SocialMediaType', ThirdParty.SocialMediaType)
                            //.service('WeiBo', ThirdParty.WeiBo)
                            //.service('QQ', ThirdParty.QQ)
                            //.service('Banner', Banner);

  return modelsModule;
});

// models/lib/request.js
// MODIFIED models/index.js (removed uncecessary models)
define('models/lib/request', [
  'angular',
  'jquery'
], function(angular, $) {
  function Request($http, $q, $rootScope) {
    this.$http = $http;
    this.$q = $q;
    this.$rootScope = $rootScope;
  }

  function hideShownModal() {
    var eleModal = $('body').find('.modal.in');

    if (eleModal.get(0) && eleModal.get(0).id != 'loginTimeoutPopModal') {
      eleModal.modal('hide');
    }
  }

  Request.prototype.emit = function(config) {
    var $q = this.$q;
    var $rootScope = this.$rootScope;
    return this.$http(config).then(function(response) {
      var data = response.data;
      if (data && data.result === 'success') {
        return data;
      } else {
        if(data && data.result === 'login'){
          hideShownModal();
          $rootScope.$broadcast('loginFail', true);
        }
        return $q.reject(data);
      }
    }, function(response) {
      return $q.reject(response.data);
    });
  };

  Request.prototype.get = function(url, params, config) {
    var _config = angular.extend({
      method: 'GET',
      url: url,
      params: params
    }, config);

    return this.emit(_config);
  };

  Request.prototype.jsonp = function(url, params, config) {
    params = angular.extend(params, {
      callback: "JSON_CALLBACK"
    });

    var _config = angular.extend({
      method: 'GET',
      url: url,
      params: params
    }, config);

    return this.emit(_config);
  };

  Request.prototype.post = function(url, params, config) {
    var data;
    if (params) {
      data = $.param(params);
    }

    var _config = angular.extend({
      method: 'POST',
      url: url,
      data: data,
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    }, config);

    return this.emit(_config);
  };

  Request.$inject = ['$http', '$q','$rootScope'];

  return Request;
});


/*
 *
 * When we don't need to consider of forum, addCookie and removeCookie
 * can be deleted
 *
 */
define('models/lender/session', [
  'angular',
  'jquery',
  'jquery.cookie'
], function(angular, $) {
  var remoteSessionCookieKey = 'JSESSIONID';

  if(SLConfig.nodeAPI) {
    remoteSessionCookieKey = 'sid';
  }

  var sessionCookie = {
    remote: remoteSessionCookieKey,
    local: 'slSessionId',
    config: {
      path: "/",
      domain: '.dianrong.com',
      expires: 1
    }
  };

  function Session() {
    // use `undefined` as third value to represent `before login` status
    // this.isAuthenticated = undefined;
  }

  Session.prototype.create = function() {
    this.isAuthenticated = true;
    this.addCookie();
  }

  /*
   *
   * It's a nightmare
   *
   * functions addCookie and removeCookie is for forum
   * As the backend write the cookie in domain www.dianrong.com
   * forum.dianrong.com can read this cookie, we need to write another
   * cookie slSessionId for forum
   *
   */
  Session.prototype.addCookie = function() {
    var sessionId = $.cookie(sessionCookie.remote);
    if(sessionId) {
      $.cookie(sessionCookie.local, sessionId, sessionCookie.config);
    }
  };

  Session.prototype.removeCookie = function() {
    $.removeCookie(sessionCookie.local, sessionCookie.config);
  };

  Session.prototype.destroy = function() {
    this.isAuthenticated = false;
    this.removeCookie();
  };

  Session.$inject = [];

  return Session;
});

// define("models/lender/third-party",["jquery","angular"],function(e,t){function n(){}function r(e,t,r,a){this.type=o.QQ,this.$q=e,this.request=r,this.session=a,this.authorizeUrl="https://graph.qq.com/oauth2.0/authorize",this.oauthParams={response_type:"code",client_id:"100498332",redirect_uri:t.fullUrl("/")+"account/qqLoginCallback",scope:"get_user_info"},n.call(this)}function a(e,t,r,a){this.type=o.WEIBO,this.$q=e,this.request=r,this.session=a,this.authorizeUrl="https://api.weibo.com/oauth2/authorize",this.oauthParams={client_id:"4271802753",redirect_uri:t.fullUrl("/")+"account/weiboLoginCallback",forcelogin:!0},n.call(this)}var o={QQ:"QQ",WEIBO:"WEIBO"};return n.prototype.updateSession=function(){this.session.create()},n.prototype.oauth=function(){var n=t.extend({},this.oauthParams,{state:"login"});window.location=this.authorizeUrl+"?"+e.param(n)}, n.prototype.login=function(e){var n=t.extend({},e,{source:this.type}),r=this;return this.request.post("/api/v2/users/login/thirdparty",n).then(function(e){return r.updateSession(),e},function(e){r.$q.reject(e)})}, r.prototype=new n,r.prototype.constructor=r,r.$inject=["$q","Utils","Request","Session"],a.prototype=new n,a.prototype.constructor=a,a.$inject=["$q","Utils","Request","Session"],{SocialMediaType:o,QQ:r,WeiBo:a}}),


/*
 * Use this service to get user profile
 *
 */
// lender/user.js MODIFIED -- deleted unused functions
define('models/lender/user', [
  'angular',
  'models/lib/request'
], function (angular) {
  'use strict';

  function User($q, $filter, Request, Session) {
    this.loggedIn = false;
    this.timedOut = false;
    this.session = Session;
    this.profilePromise = null;

    this.$q = $q;
    this.request = Request;

    var self = this;
    /* no need to query profile
    this.queryProfile().then(function (response) {
      self.update(response.content);
    }, function () {
      self.session.destroy();
    });
    */
  }

  User.prototype.update = function (profile) {
    this.loggedIn = true;
    this.timedOut = false;

    this.session.create();
  };

  User.prototype.login = function (username, password, needSid) {
    var params = {
      identity: username,
      password: password,
      from_new_web: true,
      needSid: needSid
    };

    var self = this;
    return this.request.post('/api/v2/users/login', params).then(function (response) {
      self.update();

      return response;
    }, function (response) {
      return self.$q.reject(response);
    });
  };

  User.prototype.loginSmart = function (username, password, serviceUrl, captcha) {
    var params = {
      identity: username,
      password: password,
      service: serviceUrl
    };
    if (captcha) {
      params.captcha = captcha;
    }
    var conf={withCredentials:true};
    var self = this;
    return this.request.post('/auth-server/users/loginsmart', params, conf).then(function (response) {
      self.update();

      return response;
    }, function (response) {
      return self.$q.reject(response);
    });
  };

  User.prototype.bindWechat = function (params) {
    var self = this;
    return this.request.post('/api/v2/users/login/wechat', params).then(function (response) {
      self.update();

      return response;
    }, function (response) {
      return self.$q.reject(response);
    });
  };

  User.prototype.logout = function (params) {
    var self = this;
    return this.request.post('/api/v2/users/logout', params).then(function (response) {
      $.removeCookie('userName', {
        path: '/'
      });
      self.loggedIn = false;
      self.timedOut = true;
      self.session.destroy();
      return response;
    }, function (response) {
      return self.$q.reject(response);
    });
  };

  User.$inject = ['$q', '$filter', 'Request', 'Session'];

  return User;
});

