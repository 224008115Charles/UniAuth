apply plugin: 'java'
apply plugin: "war"
apply plugin: 'maven'
apply plugin: 'eclipse'

apply from: 'build-tomcat.gradle'

group = 'com.dr.cas'
version = ''

description = """Dianrong CAS server"""

sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
     maven { url "http://archiva.dianrong.com/repository/mirror" }
     maven { url "http://archiva.dianrong.com/repository/internal" }
     maven { url "http://archiva.dianrong.com/repository/snapshots" }
     maven { url "https://code.lds.org/nexus/content/groups/main-repo" }
}

/*
configurations {
    // Jars that are only used in compilation.
    compileOnly
    // Local Jars that are used both in compilation and runtime.
    provided
}

// to exclude transitive dependencies in our application.
configurations.all { 
    transitive = false
}
*/

dependencies {
    compile project(":auth-server")

	//cas
    compile 'org.jasig.cas:cas-server-core:4.1.3'
	compile 'org.jasig.cas:cas-server-security-filter:2.0.4'
	compile 'org.jasig.cas:cas-server-webapp-support:4.1.3'
	compile 'org.jasig.cas:cas-server-integration-restlet:4.1.3'
	
	// metrics
	compile 'com.ryantenney.metrics:metrics-spring:3.1.0'
	
	//compile 'org.jasig.cas:cas-server-support-jdbc:3.5.2.1'
    
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile group: 'javax.servlet', name: 'jstl', version:'1.2'
    compile group: 'velocity', name: 'velocity', version:'1.5'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.5.0'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version:'1.9.13'
    compile group: 'commons-lang', name: 'commons-lang', version:'2.6'
    testCompile group: 'junit', name: 'junit', version:'4.11'
    testCompile(group: 'org.mockito', name: 'mockito-core', version:'1.9.5') {
        exclude(module: 'hamcrest-core')
    }
    compile group: 'redis.clients', name: 'jedis', version:'2.7.2'
    compile group: 'org.apache.commons', name: 'commons-pool2', version:'2.3'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.2.2'
    
    //spring
   def spring_version = '4.1.6.RELEASE'
    compile group: 'org.springframework', name: 'spring-test', version:"${spring_version}"
    compile(group: 'org.springframework.security', name: 'spring-security-web', version:'4.0.3.RELEASE') {
		exclude(module: 'spring-asm')
    }
	runtime  group: 'org.springframework', name: 'spring-expression', version:"${spring_version}"
	compile "org.springframework:spring-context-support:${spring_version}"
	compile "org.springframework.webflow:spring-webflow:2.4.2.RELEASE"
    
    //google
    compile group: 'com.google.guava', name: 'guava', version: '17.0'
    
    // jdbc driver
    compile 'ch.qos.logback:logback-classic:1.1.3'
    
     //Http Components
    compile 'org.apache.httpcomponents:httpclient:4.4'
    compile 'org.apache.httpcomponents:fluent-hc:4.4'
    compile 'org.apache.httpcomponents:httpmime:4.4'
    
    // captcha
    compile fileTree('lib') {
        include 'kaptcha-1.1.jar'
    }
}

sourceSets {
    main {
        java.srcDirs = [ 'src/main/java' ]
        resources.srcDirs = [ 'src/main/resources' ]
    }
}
        
        
eclipse {
    classpath {
        plusConfigurations += [configurations.compile]
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"  
    options.warnings = false
}

war {
    description = 'Create auth-server.war'
    doFirst {
        println description
        baseName = 'auth-server'
        destinationDir = file('build')
    }
}